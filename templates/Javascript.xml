<templateSet group="JavaScript">
  <template name="def" value="var deferred = $.Deferred();&#10;&#10;$END$&#10;&#10;return deferred.promise();" description="Deferred" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="mod" value="module.exports = $END$" description="module.exports" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="doc" value="/*&#10; * $END$&#10; */" description="documentation" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="prom" value="new RSVP.Promise(function(resolve, reject) {&#10;    $END$&#10;});" description="RSVP promise" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="f" value="($PARAM$) =&gt; {&#10;    $END$&#10;}" description="function es6" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="comp" value="import React, {Component, PropTypes} from 'react';&#10;&#10;const propTypes = {&#10;    &#10;}&#10;&#10;const defaultProps = {&#10;    &#10;}&#10;&#10;class $COMPONENT$ extends Component {&#10;    constructor(props) {&#10;        super(props);&#10;    }&#10;    render() {&#10;        return (&#10;            &lt;div&gt;&lt;/div&gt;&#10;        )&#10;    }&#10;}&#10;&#10;$COMPONENT$.propTypes = propTypes;&#10;$COMPONENT$.defaultProps = defaultProps;&#10;&#10;export default $COMPONENT$;" description="React component" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcpm" value="import React, {Component, PropTypes} from 'react';&#10;&#10;const propTypes = {}&#10;&#10;const defaultProps = {}&#10;&#10;class $COMPONENT$ extends Component {&#10;    constructor(props) {&#10;        super(props);&#10;    }&#10;    render() {&#10;        return (&#10;            &lt;div&gt;$END$&lt;/div&gt;&#10;        )&#10;    }&#10;}&#10;&#10;$COMPONENT$.propTypes = propTypes;&#10;$COMPONENT$.defaultProps = defaultProps;&#10;&#10;export default $COMPONENT$;" description="React Component PropType Module" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcfpm" value="import React, {Component, PropTypes} from 'react';&#10;&#10;const propTypes = {}&#10;&#10;const defaultProps = {}&#10;&#10;function $COMPONENT$($PARAMETER$) {&#10;    return (&#10;        &lt;div&gt;$END$&lt;/div&gt;&#10;    )&#10;}&#10;&#10;$COMPONENT$.propTypes = propTypes;&#10;$COMPONENT$.defaultProps = defaultProps;&#10;&#10;export default $COMPONENT$;" description="React Component Functional PropType Module" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETER" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcf" value="function $COMPONENT$($PARAMETER$) {&#10;    return (&#10;        &lt;div&gt;$END$&lt;/div&gt;&#10;    )&#10;}" description="React Component Functional" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETER" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rc" value="class $COMPONENT$ extends Component {&#10;    constructor(props) {&#10;        super(props);&#10;    }&#10;    render() {&#10;        return (&#10;            &lt;div&gt;$END$&lt;/div&gt;&#10;        )&#10;    }&#10;}" description="React Component PropType Module" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="fr" value="($PARAM$) =&gt; ($END$);" description="function return es6" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ir" value="import React, { Component } from 'react';" description="Import React" toReformat="false" toShortenFQNames="true" />
  <template name="b" value="this.$MEMBER$ = this.$MEMBER$.bind(this);&#10;$END$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="MEMBER" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="imp" value="import $MODULE$ from '$PATH$';&#10;$END$" description="Import es6" toReformat="false" toShortenFQNames="true">
    <variable name="MODULE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ff" value="($PARAM$) =&gt; ($END$)" description="" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>